name: "caffe_config"
net {
  layer {
    name: "label"
    type: "LabelLayer"
    top: "softmax"
  }
  layer {
    name: "image"
    type: "ImageLayer"
    cropsize: 227
    mirror: true
    top: "conv1"
  }
  layer  {
    name: "conv1"
    type: "ConvLayer"
    num_output: 96
    window_size: 11
    stride: 4
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top: "relu1"
    bottom: "image"
  }
  layer {
    name: "relu1"
    type: "ReLULayer"
    top: "pool1"
    bottom :"conv1"
  }
  layer {
    name: "pool1"
    type: "PoolingLayer"
    pooling_method: kMaxPooling
    window_size: 3
    stride: 2
    top: "lrn1"
    bottom: "relu1"
  }
  layer {
    name: "lrn1"
    type: "LRNLayer"
    window_size: 5
    alpha: 0.0001
    beta: 0.75
    top: "conv2"
    bottom: "pool1"
  }
  layer {
    name: "conv2"
    type: "ConvLayer"
    num_output: 256
    num_groups: 2
    window_size: 5
    pad: 2
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 1.0
    }
    top: "relu2"
    bottom: "lrn1"
  }
  layer {
    name: "relu2"
    type: "ReLULayer"
    top: "pool2"
    bottom :"conv2"
  }

  layer{
    name: "pool2"
    type: "PoolingLayer"
    pooling_method: kMaxPooling
    window_size: 3
    stride: 2
    top: "lrn2"
    bottom: "relu2"
  }
  layer {
    name: "lrn2"
    type: "LRNLayer"
    window_size: 5
    alpha: 0.0001
    beta: 0.75
    top: "conv3"
    bottom: "pool2"
  }
  layer {
    name: "conv3"
    type: "ConvLayer"
    num_output: 384
    window_size:3
    pad: 1
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value:0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu3"
    bottom:"lrn2"
  }
  layer {
    name: "relu3"
    type: "ReLULayer"
    top: "conv4"
    bottom :"conv3"
  }


  layer {
    name: "conv4"
    type: "ConvLayer"
    num_output: 384
    num_groups: 2
    window_size: 3
    pad: 1
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu4"
    bottom:"relu3"
  }
  layer {
    name: "relu4"
    type: "ReLULayer"
    top: "conv5"
    bottom :"conv4"
  }

  layer {
    name: "conv5"
    type: "ConvLayer"
    num_output: 256
    num_groups: 2
    window_size: 3
    pad: 1
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top: "relu5"
    bottom:"relu4"
  }
  layer {
    name: "relu5"
    type: "ReLULayer"
    top: "pool5"
    bottom :"conv5"
  }

  layer {
    name: "pool5"
    type: "PoolingLayer"
    window_size: 3
    stride: 2
    top:"fc6"
    bottom:"relu5"
  }
  layer {
    name: "fc6"
    type: "FCLayer"
    num_output: 4096
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.005
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu6"
    bottom:"pool5"
  }
  layer {
    name: "relu6"
    type: "ReLULayer"
    top: "dropout6"
    bottom :"fc6"
  }
  layer {
    name: "dropout6"
    type: "DropoutLayer"
    top: "fc7"
    bottom:"relu6"
  }

  layer {
    name: "fc7"
    type: "FCLayer"
    num_output: 4096
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.005
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu7"
    bottom:"dropout6"
  }
  layer {
    name: "relu7"
    type: "ReLULayer"
    top: "dropout7"
    bottom :"fc7"
  }
  layer {
    name: "dropout7"
    type: "DropoutLayer"
    top: "fc8"
    bottom:"relu7"
  }
  layer {
    name : "fc8"
    type: "FCLayer"
    num_output: 1000
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"softmax"
    bottom: "dropout7"
  }
  layer {
    name: "softmax"
    type: "SoftmaxLossLayer"
    bottom: "fc8"
    bottom: "label"
  }
}

solver {
  train_batchsize:16
  train_steps: 450000
  display_after_steps:1
  display_every_steps: 1
  sgd{
    base_learning_rate: 0.01
    learning_rate_change:kStep
    learning_rate_change_steps:100000
    momentum: 0.9
    gamma: 0.1
    weight_decay: 0.0005
  }
}

data{
  train_data{
    name: "train"
    type: "ImageNetSource"
    hdfs: true
    image_folder:"imagenet12/train"
    label_path: "imagenet12/train_label.txt"
    mean_file: "imagenet12/imagenet_mean.binaryproto"
    size: 2000
    shape{
      s: 3
      s: 256
      s: 256
    }
    shape{
      s: 1
    }
  }
}
