name: "caffe_config"
net {
  layer {
    name: "input_label"
    type: "DataLayer"
    data_source: "imagenet_label"
  }
  layer {
    name: "input_img"
    type: "DataLayer"
    data_source: "imagenet_img"
    cropsize: 227
    mirror: true
  }
  layer {
    name: "hidden1_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden1_after_maxpool"
    type: "LinearLayer"
  }
  layer {
    name : "hidden1_after_norm"
    type: "LinearLayer"
  }
  layer {
    name: "hidden2_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden2_after_maxpool"
    type: "LinearLayer"
  }
  layer {
    name : "hidden2_after_norm"
    type: "LinearLayer"
  }
  layer {
    name: "hidden3_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden4_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden5_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden5_after_maxpool"
    type: "LinearLayer"
  }
  layer {
    name : "hidden6_relu"
    type: "ReLULayer"
    drop_prob: 0.4
  }
  layer {
    name : "hidden7_relu"
    type: "ReLULayer"
    drop_prob: 0.4
  }
  layer {
    name : "hidden8"
    type: "LinearLayer"
  }

  edge {
    name: "input_img-hidden1_relu"
    type: "ConvEdge"
    num_output: 96
    kernel_size: 11
    stride: 4
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    bottom: "input_img"
    top: "hidden1_relu"
  }
  edge {
    name: "hidden1_relu-hidden1_after_maxpool"
    type: "PoolingEdge"
    pooling_method: kMaxPooling
    kernel_size: 3
    stride: 2
    bottom: "hidden1_relu"
    top: "hidden1_after_maxpool"
  }
  edge {
    name: "hidden1_after_maxpool-hidden1_after_norm"
    type: "LRNEdge"
    local_size: 5
    alpha: 0.0001
    beta: 0.75
    bottom:"hidden1_after_maxpool"
    top: "hidden1_after_norm"
  }
  edge {
    name: "hidden1_after_norm-hidden2_relu"
    type: "ConvEdge"
    num_output: 256
    num_groups: 2
    kernel_size: 5
    pad: 2
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 1.0
    }
    bottom: "hidden1_after_norm"
    top: "hidden2_relu"
  }
  edge{
    name: "hidden2_relu-hidden2_after_maxpool"
    type: "PoolingEdge"
    pooling_method: kMaxPooling
    kernel_size: 3
    stride: 2
    bottom: "hidden2_relu"
    top: "hidden2_after_maxpool"
  }
  edge {
    name: "hidden2_after_maxpool-hidden2_after_norm"
    type: "LRNEdge"
    local_size: 5
    alpha: 0.0001
    beta: 0.75
    bottom: "hidden2_after_maxpool"
    top: "hidden2_after_norm"
  }
  edge {
    name: "hidden2_after_norm-hidden3_relu"
    type: "ConvEdge"
    num_output: 384
    kernel_size:3
    pad: 1
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value:0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    bottom: "hidden2_after_norm"
    top: "hidden3_relu"
  }
  edge {
    name: "hidden3_relu-hidden4_relu"
    type: "ConvEdge"
    num_output: 384
    num_groups: 2
    kernel_size: 3
    pad: 1
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    bottom: "hidden3_relu"
    top: "hidden4_relu"
  }
  edge {
    name: "hidden4_relu-hidden5_relu"
    type: "ConvEdge"
    num_output: 256
    num_groups: 2
    kernel_size: 3
    pad: 1
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    bottom: "hidden4_relu"
    top: "hidden5_relu"
  }
  edge {
    name: "hidden5_relu-hidden5_after_maxpool"
    type: "PoolingEdge"
    kernel_size: 3
    stride: 2
    bottom: "hidden5_relu"
    top: "hidden5_after_maxpool"
  }
  edge {
    name: "hidden5_after_maxpool-hidden6_relu"
    type: "InnerProductEdge"
    num_output: 4096
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.005
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    bottom: "hidden5_after_maxpool"
    top: "hidden6_relu"
  }
  edge {
    name: "hidden6_relu-hidden7_relu"
    type: "InnerProductEdge"
    num_output: 4096
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.005
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    bottom: "hidden6_relu"
    top: "hidden7_relu"
  }
  edge {
    name : "hidden7_relu-hidden8"
    num_output: 1000
    type: "InnerProductEdge"
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    bottom: "hidden7_relu"
    top: "hidden8"
  }
  edge {
    name: "hidden8-input_label"
    type: "SoftmaxLossEdge"
    bottom: "hidden8"
    top: "input_label"
  }
}

trainer {
  sgd{
    train_batchsize:256
    total_steps: 450000
    base_learning_rate: 0.01
    learning_rate_change:kStep
    learning_rate_change_steps:100000
    base_momentum: 0.9
    momentum_change: kFixed
    base_weight_decay: 0.0005
    weight_decay_change:kFixed
  }
  train_data{
    name: "imagenet_label"
    type: "LabelSource"
    path: "/data0/wangwei/data/imagenet2012/val_label.txt"
    size: 50000
  }
  train_data {
    name: "imagenet_img"
    type: "RGBDirSource"
    path: "/data0/wangwei/data/imagenet2012/validation_img"
    size: 50000
    mean_file: "/data0/wangwei/data/imagenet2012/imagenet_mean.binaryproto"
    channels: 3
    width:256
    height:256
  }
}
