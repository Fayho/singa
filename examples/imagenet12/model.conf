name: "caffe_config"
net {
  layer {
    name: "label"
    type: "LabelLayer"
    top: "softmax"
  }
  layer {
    name: "image"
    type: "ImageLayer"
    cropsize: 227
    mirror: true
    top: "imgcol1"
  }
  layer  {
    name: "imgcol1"
    type: "ImgColLayer"
    window_size: 11
    stride: 4
    top: "conv1"
    bottom: "image"
  }
  layer{
    name: "conv1"
    type: "ConvProductLayer"
    num_output: 96
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top: "relu1"
    bottom: "imgcol1"
  }
  layer {
    name: "relu1"
    type: "ReLULayer"
    top: "pool1"
    bottom :"conv1"
  }
  layer {
    name: "pool1"
    type: "PoolingLayer"
    pooling_method: kMaxPooling
    window_size: 3
    stride: 2
    top: "lrn1"
    bottom: "relu1"
  }
  layer {
    name: "lrn1"
    type: "LRNLayer"
    window_size: 5
    alpha: 0.0001
    beta: 0.75
    top: "split1"
    bottom: "pool1"
  }
  layer {
    name: "split1"
    type: "SplitLayer"
    split_dim: 1
    split_size: 48
    top: "imgcol21"
    top: "imgcol22"
    bottom:"lrn1"
  }
  layer {
    name: "imgcol21"
    type: "ImgColLayer"
    window_size: 5
    pad: 2
    top:"conv21"
    bottom:"split1"
  }
  layer {
    name: "imgcol22"
    type: "ImgColLayer"
    window_size: 5
    pad: 2
    top:"conv22"
    bottom:"split1"
  }

  layer {
    name: "conv21"
    type: "ConvProductLayer"
    num_output: 128
      param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 1.0
    }
    top: "relu21"
    bottom: "imgcol21"
  }

  layer {
    name: "conv22"
    type: "ConvProductLayer"
    num_output: 128
      param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 1.0
    }
    top: "relu22"
    bottom: "imgcol22"
  }

  layer {
    name: "relu21"
    type: "ReLULayer"
    top: "pool21"
    bottom :"conv21"
  }

  layer {
    name: "relu22"
    type: "ReLULayer"
    top: "pool22"
    bottom :"conv22"
  }
  layer{
    name: "pool21"
    type: "PoolingLayer"
    pooling_method: kMaxPooling
    window_size: 3
    stride: 2
    top: "lrn21"
    bottom: "relu21"
  }

  layer{
    name: "pool22"
    type: "PoolingLayer"
    pooling_method: kMaxPooling
    window_size: 3
    stride: 2
    top: "lrn22"
    bottom: "relu22"
  }
  layer {
    name: "lrn21"
    type: "LRNLayer"
    window_size: 5
    alpha: 0.0001
    beta: 0.75
    top: "concat3"
    bottom: "pool21"
  }
  layer {
    name: "lrn22"
    type: "LRNLayer"
    window_size: 5
    alpha: 0.0001
    beta: 0.75
    top: "concat3"
    bottom: "pool22"
  }
  layer {
    name: "concat3"
    type: "ConcatLayer"
    bottom: "lrn21"
    bottom: "lrn22"
    top: "imgcol3"
  }
  layer{
    name: "imgcol3"
    type: "ImgColLayer"
    window_size:3
    pad: 1
    top: "conv3"
    bottom:"concat3"
  }

  layer {
    name: "conv3"
    type: "ConvProductLayer"
    num_output: 384
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value:0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu3"
    bottom:"imgcol3"
  }
  layer {
    name: "relu3"
    type: "ReLULayer"
    top: "split3"
    bottom :"conv3"
  }
  layer{
    name: "split3"
    type: "SplitLayer"
    split_dim: 1
    split_size: 192
    top: "imgcol41"
    top: "imgcol42"
    bottom: "relu3"
  }
  layer {
    name: "imgcol41"
    type: "ImgColLayer"
    window_size: 3
    pad: 1
    top: "conv41"
    bottom:"split3"
  }
  layer {
    name: "imgcol42"
    type: "ImgColLayer"
    window_size: 3
    pad: 1
    top: "conv42"
    bottom:"split3"
  }

  layer {
    name: "conv41"
    type: "ConvProductLayer"
    num_output: 192
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu41"
    bottom:"imgcol41"
  }

  layer {
    name: "conv42"
    type: "ConvProductLayer"
    num_output: 192
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu42"
    bottom:"imgcol42"
  }
  layer {
    name: "relu41"
    type: "ReLULayer"
    top: "imgcol51"
    bottom :"conv41"
  }

  layer {
    name: "relu42"
    type: "ReLULayer"
    top: "imgcol52"
    bottom :"conv42"
  }

  layer {
    name: "imgcol51"
    type: "ImgColLayer"
    window_size: 3
    pad: 1
    bottom: "relu41"
    top: "conv51"
  }
  layer {
    name: "imgcol52"
    type: "ImgColLayer"
    window_size: 3
    pad: 1
    bottom: "relu42"
    top: "conv52"
  }

  layer {
    name: "conv51"
    type: "ConvProductLayer"
    num_output: 128
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top: "relu51"
    bottom:"imgcol51"
  }
  layer {
    name: "conv52"
    type: "ConvProductLayer"
    num_output: 128
        param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top: "relu52"
    bottom:"imgcol52"
  }
  layer {
    name: "relu51"
    type: "ReLULayer"
    top: "pool51"
    bottom :"conv51"
  }
  layer {
    name: "relu52"
    type: "ReLULayer"
    top: "pool52"
    bottom :"conv52"
  }
  layer {
    name: "pool51"
    type: "PoolingLayer"
    window_size: 3
    stride: 2
    top:"concat5"
    bottom:"relu51"
  }
  layer {
    name: "pool52"
    type: "PoolingLayer"
    window_size: 3
    stride: 2
    top:"concat5"
    bottom:"relu52"
  }
  layer{
    name: "concat5"
    type: "ConcatLayer"
    top: "fc6"
    bottom: "pool51"
    bottom: "pool52"
  }
  layer {
    name: "fc6"
    type: "FCLayer"
    num_output: 4096
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.005
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu6"
    bottom:"concat5"
  }
  layer {
    name: "relu6"
    type: "ReLULayer"
    top: "dropout6"
    bottom :"fc6"
  }
  layer {
    name: "dropout6"
    type: "DropoutLayer"
    top: "fc7"
    bottom:"relu6"
  }

  layer {
    name: "fc7"
    type: "FCLayer"
    num_output: 4096
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.005
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"relu7"
    bottom:"dropout6"
  }
  layer {
    name: "relu7"
    type: "ReLULayer"
    top: "dropout7"
    bottom :"fc7"
  }
  layer {
    name: "dropout7"
    type: "DropoutLayer"
    top: "fc8"
    bottom:"relu7"
  }
  layer {
    name : "fc8"
    type: "FCLayer"
    num_output: 1000
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
      learning_rate_multiplier: 1.0
      weight_decay_multiplier: 1.0
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 0.0
      learning_rate_multiplier: 2.0
      weight_decay_multiplier: 0.0
    }
    top:"softmax"
    bottom: "dropout7"
  }
  layer {
    name: "softmax"
    type: "SoftmaxLossLayer"
    bottom: "fc8"
    bottom: "label"
  }
}

solver {
  batchsize:256
  train_steps: 450000
  validation_steps: 195
  test_steps: 390
  display_after_steps:1
  display_every_steps: 30
  checkpoint_after_steps: 3000
  checkpoint_every_steps: 3000
  validation_after_steps: 1000
  validation_every_steps: 1000
  test_after_steps: 1000
  test_every_steps: 2000
  method: kAdaGrad
  sgd{
    base_learning_rate: 0.01
    learning_rate_change:kStep
    learning_rate_change_steps:100000
    momentum: 0.9
    gamma: 0.1
    weight_decay: 0.0005
  }
  adagrad{
    learning_rate: 0.1
    kinit: 1.0
  }
}

data{
  train_data{
    name: "train"
    type: "ImageNetSource"
    hdfs: true
    shuffle: true
    image_folder:"imagenet12/train"
    label_path: "imagenet12/train_label.txt"
    mean_file: "imagenet12/imagenet_mean.binaryproto"
    size: 1200000
    shape{
      s: 3
      s: 256
      s: 256
    }
    shape{
      s: 1
    }
  }
  validation_data{
    name: "validation"
    type: "ImageNetSource"
    hdfs: true
    shuffle: true
    image_folder:"imagenet12/validation"
    label_path: "imagenet12/validation_label.txt"
    mean_file: "imagenet12/imagenet_mean.binaryproto"
    size: 50000
    shape{
      s: 3
      s: 256
      s: 256
    }
    shape{
      s: 1
    }
  }
  test_data{
    name: "test"
    type: "ImageNetSource"
    hdfs: true
    shuffle: true
    image_folder:"imagenet12/test"
    label_path: "imagenet12/test_label.txt"
    mean_file: "imagenet12/imagenet_mean.binaryproto"
    size: 100000
    shape{
      s: 3
      s: 256
      s: 256
    }
    shape{
      s: 1
    }
  }
}
