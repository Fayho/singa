name: "convnet_config"
net {
  // 10 layers in total including 2 input layers and 1 output
  layer {
    name: "input_label"
    type: "DataLayer"
    data_source: "label"
  }
  layer {
    name: "input_img"
    type: "DataLayer"
    data_source: "rgb_img"
  }
  layer {
    name: "hidden1_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden1_after_maxpool"
    type: "LinearLayer"
  }
  layer {
    name : "hidden1_after_norm"
    type: "LinearLayer"
  }
  layer {
    name: "hidden2_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden2_after_maxpool"
    type: "LinearLayer"
  }
  layer {
    name : "hidden2_after_norm"
    type: "LinearLayer"
  }
  layer {
    name: "hidden3_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden4_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden5_relu"
    type: "ReLULayer"
  }
  layer {
    name: "hidden5_after_maxpool"
    type: "LinearLayer"
  }
  layer {
    name : "hidden6_relu"
    type: "LRNLayer"
  }
  layer {
    name : "hidden7_relu"
    type: "LRNLayer"
  }
  layer {
    name : "output"
    type: "SoftmaxLayer"
  }

  // edges,

  edge {
    name: "conv1"
    type: "ConvEdge"
    num_output: 96
    kernel_size: 7
    stride: 2
    padding: 1
    param {
      name: "weight"
      initializer: kUniformSqrtFanIn
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 0.0
    }
    top: "hidden1_relu"
    bottom: "input_img"
  }
  edge {
    name: "maxpool1"
    type: "PoolingEdge"
    pooling_method: kMaxPooling
    kernel_size: 3
    stride: 2
    padding: 1
    top: "hidden1_after_maxpool"
    bottom: "hidden1_relu"
  }
  edge { // diff hyperparameters to convnet
    name: "norm1"
    type: "LRNEdge"
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
  edge {
    name: "conv2"
    type: "ConvEdge"
    num_output: 256
    kernel_size: 5
    stride: 2
    padding: 0
    param {
      name: "weight"
      init_method: kUniformSqrtFanIn
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
    }
    top: "hidden2_relu"
    bottom: "hidden1_after_norm"
  }
  edge{
    name: "maxpool2"
    type: "PoolingEdge"
    pooling_method: kMaxPooling
    kernel_size: 3
    stride: 2
    padding: 1
    top: "hidden2_after_maxpool"
    top: "hidden2_relu"
  }
  edge {
    name: "norm2"
    type: "LRNEdge"
    local_size: 5
    alpha: 0.0001
    beta: 0.75
    top: "hidden2_after_norm"
    bottom: "hidden2_after_maxpool"
  }
  edge {
    name: "conv3"
    type: "ConvEdge"
    num_output: 384
    kernel_size:3
    pad: 1
    param {
      name: "weight"
      init_method: kGaussain
      std: 0.01
    }
    param {
      name: "bias"
      init_method: kConstant
      value:0.0
    }
    top: "hidden4_relu"
    bottom: "hidden3_relu"
  }
  edge {
    name: "conv4"
    type: "ConvEdge"
    num_output: 384
    kernel_size: 3
    stride: 1
    param {
      name: "weight"
      init_method: kUniformSqrtFanIn
    }
    param {
      name: "bias"
      init_method: kConstant
      value: 1.0
    }
    top: "hidden5_relu"
    bottom: "hidden4_relu"


trainer {
  sgd{
    base_learning_rate: 0.1
    base_momentum: 0.5
    base_weight_decay: 0.01
    final_momentum: 0.9
    momentum_change_steps: 10
  }
  checkpoint_after_steps: 2
  checkpoint_every_steps: 2
}
