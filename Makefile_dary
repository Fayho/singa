###############################################################################
# External library Requirements for success compiling:
# 	gflags, glog, gtest, google-protobuf, mpi, boost, opencv.
###############################################################################
# Change this variable!! g++ location, should support c++11, tested with 4.8.1
HOME_DIR := /home/wangwei/install
# Location of g++
CXX := $(HOME_DIR)/bin/g++
# Header folder for system and external libs. You may need to change it.
INCLUDE_DIRS := ./include/darray/ $(HOME_DIR)/include
#$(HOME_DIR)/atlas/include

CXXFLAGS := -g -Wall -pthread -fPIC -std=c++11 -Wno-unknown-pragmas \
	-funroll-loops $(foreach includedir, $(INCLUDE_DIRS), -I$(includedir))

MPI_LIBRARIES := mpi_cxx mpi open-rte open-pal dl rt nsl util m
# Folder to store compiled files
LIBRARIES := $(MPI_LIBRARIES) glog gflags protobuf openblas ga gfortran armci
# Lib folder for system and external libs. You may need to change it.
LIBRARY_DIRS := $(HOME_DIR)/lib64 $(HOME_DIR)/lib

LDFLAGS := $(foreach librarydir, $(LIBRARY_DIRS), -L$(librarydir)) \
						$(foreach library, $(LIBRARIES), -l$(library)) $(MPI_LDFLAGS)

BUILD_DIR := build

##############################################################################
# build test with dary
#############################################################################
.PHONY: dary.test proto init flint clean

# find user defined .proto file, and then compute the corresponding .h, .cc
# files, which cannot be found by shell find, because they haven't been
# generated currently
DARY_HDRS := $(shell find include/darray -name "*.h" -type f)
DARY_SRCS := $(shell find src/darray -name "*.cc" -type f)
DARY_OBJS := $(sort $(addprefix $(BUILD_DIR)/, $(DARY_SRCS:.cc=.o)) $(PROTO_OBJS) )
-include $(DARY_OBJS:%.o=%.P)

dary.test: init $(DARY_OBJS)
	$(CXX) $(DARY_OBJS)  -o dary.test $(CXXFLAGS) $(LDFLAGS)

# create folders
init:
	@ mkdir -p $(foreach obj, $(DARY_OBJS), $(dir $(obj)))
	@echo

$(DARY_OBJS):$(BUILD_DIR)/%.o : %.cc
	$(CXX) $<  $(CXXFLAGS) -MMD -c -o $@
	cp $(BUILD_DIR)/$*.d $(BUILD_DIR)/$*.P; \
	sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
		-e '/^$$/ d' -e 's/$$/ :/' < $(BUILD_DIR)/$*.d >> $(BUILD_DIR)/$*.P; \
	rm -f $*.d


###############################################################################
# Formatting and lint, target is flint
###############################################################################
# files genreated by astyle, to be deleted
ORIGS := $(shell find . -name "*.orig" -type f)
# header files, with Eigen/ ignored
FL_HDRS := $(shell find include -path "include/mshadow"  -prune \
						-o \( -name "*.h" ! -name "*.pb.h" -type f \) -print )
# cc files
FL_SRCS :=$(shell find src -name "*.cc" ! -name "*.pb.cc" -type f )

flint: $(FL_HDRS) $(FL_SRCS)
	astyle --options=astyle.conf $(FL_HDRS)
	astyle --options=astyle.conf $(FL_SRCS)
	rm -f $(ORIGS)
	python cpplint.py $(FL_HDRS)
	python cpplint.py $(FL_SRCS)
	@echo


###############################################################################
# Clean files generated by previous targets
###############################################################################
clean:
	rm -rf *.a *.so
	rm -rf include/proto/*
	rm -rf src/proto/*.pb.h src/proto/*.pb.cc
	rm -rf $(BUILD_DIR)
	@echo


###############################################################################
# Test makefile, mtest
###############################################################################
mtest:
	@echo $(DARY_SRCS)
# DO NOT DELETE
