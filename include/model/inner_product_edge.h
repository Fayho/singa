// Copyright Â© 2014 Wei Wang. All Rights Reserved.
// 2014-07-15 18:40

#ifndef INCLUDE_MODEL_INNER_PRODUCT_EDGE_H_
#define INCLUDE_MODEL_INNER_PRODUCT_EDGE_H_

#include <string>
#include <map>
#include "model/edge.h"

namespace lapis {
class InnerProductEdge : public Edge {
 public:
  static const string kInnerProductEdge = "InnerProduct";
  virtual void Init(const EdgeProto &edge_proto,
                    const map<string, Edge *> &edge_map);
  virtual void ToProto(EdgeProto *edge_proto);
  /**
   * Read src Blob multiply with weight Param, plus bias Param and set the
   * result to the dest Blob
   * @param src feature/output Blob from the start layer of the edge.
   * @param dest activation/input Blob of the end layer of the edge.
   */
  virtual void Forward(const Blob *src, Blob *dest);
  /**
   * Compute gradient w.r.t weight, bias, and feature of the start layer of
   * this edge.
   * @param src gradient w.r.t the output generated by this edge in ::Forward()
   * @param dest gradient Blob corresponding to the src Blob in ::Forward()
   */
  virtual void Backward(const Blob *src, Blob *dest);

 prviate:
  Param weight, bias;
}

}  // namespace lapis

#endif  // INCLUDE_MODEL_INNER_PRODUCT_EDGE_H_
