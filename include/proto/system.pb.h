// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: system.proto

#ifndef PROTOBUF_system_2eproto__INCLUDED
#define PROTOBUF_system_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace lapis {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_system_2eproto();
void protobuf_AssignDesc_system_2eproto();
void protobuf_ShutdownFile_system_2eproto();

class SystemProto;

// ===================================================================

class SystemProto : public ::google::protobuf::Message {
 public:
  SystemProto();
  virtual ~SystemProto();

  SystemProto(const SystemProto& from);

  inline SystemProto& operator=(const SystemProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemProto& default_instance();

  void Swap(SystemProto* other);

  // implements Message ----------------------------------------------

  SystemProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemProto& from);
  void MergeFrom(const SystemProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 table_server_start = 1;
  inline bool has_table_server_start() const;
  inline void clear_table_server_start();
  static const int kTableServerStartFieldNumber = 1;
  inline ::google::protobuf::int32 table_server_start() const;
  inline void set_table_server_start(::google::protobuf::int32 value);

  // optional int32 table_server_end = 2;
  inline bool has_table_server_end() const;
  inline void clear_table_server_end();
  static const int kTableServerEndFieldNumber = 2;
  inline ::google::protobuf::int32 table_server_end() const;
  inline void set_table_server_end(::google::protobuf::int32 value);

  // optional bool standalone = 3 [default = true];
  inline bool has_standalone() const;
  inline void clear_standalone();
  static const int kStandaloneFieldNumber = 3;
  inline bool standalone() const;
  inline void set_standalone(bool value);

  // optional bool synchronous = 4 [default = true];
  inline bool has_synchronous() const;
  inline void clear_synchronous();
  static const int kSynchronousFieldNumber = 4;
  inline bool synchronous() const;
  inline void set_synchronous(bool value);

  // @@protoc_insertion_point(class_scope:lapis.SystemProto)
 private:
  inline void set_has_table_server_start();
  inline void clear_has_table_server_start();
  inline void set_has_table_server_end();
  inline void clear_has_table_server_end();
  inline void set_has_standalone();
  inline void clear_has_standalone();
  inline void set_has_synchronous();
  inline void clear_has_synchronous();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 table_server_start_;
  ::google::protobuf::int32 table_server_end_;
  bool standalone_;
  bool synchronous_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_system_2eproto();
  friend void protobuf_AssignDesc_system_2eproto();
  friend void protobuf_ShutdownFile_system_2eproto();

  void InitAsDefaultInstance();
  static SystemProto* default_instance_;
};
// ===================================================================


// ===================================================================

// SystemProto

// optional int32 table_server_start = 1;
inline bool SystemProto::has_table_server_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemProto::set_has_table_server_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemProto::clear_has_table_server_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemProto::clear_table_server_start() {
  table_server_start_ = 0;
  clear_has_table_server_start();
}
inline ::google::protobuf::int32 SystemProto::table_server_start() const {
  return table_server_start_;
}
inline void SystemProto::set_table_server_start(::google::protobuf::int32 value) {
  set_has_table_server_start();
  table_server_start_ = value;
}

// optional int32 table_server_end = 2;
inline bool SystemProto::has_table_server_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemProto::set_has_table_server_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemProto::clear_has_table_server_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemProto::clear_table_server_end() {
  table_server_end_ = 0;
  clear_has_table_server_end();
}
inline ::google::protobuf::int32 SystemProto::table_server_end() const {
  return table_server_end_;
}
inline void SystemProto::set_table_server_end(::google::protobuf::int32 value) {
  set_has_table_server_end();
  table_server_end_ = value;
}

// optional bool standalone = 3 [default = true];
inline bool SystemProto::has_standalone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemProto::set_has_standalone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SystemProto::clear_has_standalone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SystemProto::clear_standalone() {
  standalone_ = true;
  clear_has_standalone();
}
inline bool SystemProto::standalone() const {
  return standalone_;
}
inline void SystemProto::set_standalone(bool value) {
  set_has_standalone();
  standalone_ = value;
}

// optional bool synchronous = 4 [default = true];
inline bool SystemProto::has_synchronous() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemProto::set_has_synchronous() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SystemProto::clear_has_synchronous() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SystemProto::clear_synchronous() {
  synchronous_ = true;
  clear_has_synchronous();
}
inline bool SystemProto::synchronous() const {
  return synchronous_;
}
inline void SystemProto::set_synchronous(bool value) {
  set_has_synchronous();
  synchronous_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace lapis

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_system_2eproto__INCLUDED
